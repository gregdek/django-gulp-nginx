version: '2'
defaults:
  POSTGRES_USER: django
  POSTGRES_PASSWORD: sesame
  POSTGRES_DB: django
  DJANGO_ROOT: /django
  DJANGO_USER: django
  DJANGO_PORT: 8080
  DJANGO_VENV: /venv
  NODE_USER: node
  NODE_HOME: /node
  NODE_ROOT: ''
  GULP_DEV_PORT: 8080
services:

  django:
    image: centos:7
    environment:
      DATABASE_URL: "pgsql://{{ POSTGRES_USER }}:{{ POSTGRES_PASSWORD }}@postgresql:5432/{{ POSTGRES_DB }}"
      DJANGO_ROOT: "{{ DJANGO_ROOT }}"  
      DJANGO_VENV: "{{ DJANGO_VENV }}"  
    expose:
    - '{{ DJANGO_PORT }}'
    working_dir: '{{ DJANGO_ROOT }}'
    links:
    - postgresql
    user: '{{ DJANGO_USER }}'
    command: [/usr/bin/dumb-init, '{{ DJANGO_VENV }}/bin/gunicorn', -w, '2', -b, '0.0.0.0:{{ DJANGO_PORT }}', 'example.wsgi:application']
    entrypoint: [/usr/bin/entrypoint.sh]
    dev_overrides:
      command: [/usr/bin/dumb-init, '{{ DJANGO_VENV }}/bin/python', manage.py, runserver, '0.0.0.0:{{ DJANGO_PORT }}']
      volumes:
      - "$PWD:{{ DJANGO_ROOT }}"
      depends_on:
      - postgresql

    options:
      kube:
        runAsUser: 1000

  gulp:
    image: centos:7
    user: '{{ NODE_USER }}'
    command: /bin/false
    dev_overrides:
      working_dir: '{{ NODE_HOME }}'
      command: [/usr/bin/dumb-init, '{{ NODE_ROOT }}/node_modules/.bin/gulp']
      ports:
      - "8080:{{ GULP_DEV_PORT }}"
      volumes:
      - "$PWD:{{ NODE_HOME }}"
      links:
      - django

    options:
      kube:
        state: absent
      openshift:
        state: absent

  nginx:
    image: centos:7
    ports:
    - 80:{{ DJANGO_PORT }}
    user: nginx
    links:
    - django
    command: [nginx, -c, /etc/nginx/nginx.conf]
    dev_overrides:
      ports: []
      command: /bin/false

    options:
      kube:
        runAsUser: 997

  postgresql:
    image: openshift/postgresql-92-centos7 
    environment:
    - POSTGRESQL_DATABASE={{ POSTGRES_DB }}
    - POSTGRESQL_USER={{ POSTGRES_USER }}
    - POSTGRESQL_PASSWORD={{ POSTGRES_PASSWORD }}
    expose:
    - 5432
    volumes:
    - postgres-data:/var/lib/pgsql/data

    options:
      openshift:
        persistent_volume_claims:
          - volume_name: postgres-data
            claim_name: postgres-data
            access_modes:
              - ReadWriteMany

registries: {}

volumes:
  postgres-data: {}
